name: Deploy Backend (Lambda)

on:
  push:
    branches: [main, dev]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      CONFIG_ENV: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Install backend deps
        working-directory: backend
        run: npm ci

      - name: SAM build
        working-directory: backend
        run: sam build --use-container

      - name: SAM deploy
        working-directory: backend
        run: |
          sam deploy \
            --config-env $CONFIG_ENV \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              EnvName=$CONFIG_ENV \
              FrontendOrigin=${{ secrets[format('FE_ORIGIN_{0}', env.CONFIG_ENV == 'prod' && 'PROD' || 'DEV')] }} \
              JwtSecret=${{ secrets[format('JWT_SECRET_{0}', env.CONFIG_ENV == 'prod' && 'PROD' || 'DEV')] }} \
              MongoUrl=${{ secrets[format('MONGO_URL_{0}', env.CONFIG_ENV == 'prod' && 'PROD' || 'DEV')] }} \
              GoogleClientId=${{ secrets.GOOGLE_CLIENT_ID }} \
              GoogleClientSecret=${{ secrets.GOOGLE_CLIENT_SECRET }} \
              GoogleRedirectUri=${{ secrets[format('GOOGLE_REDIRECT_URI_{0}', env.CONFIG_ENV == 'prod' && 'PROD' || 'DEV')] }}
